# -*- coding: utf-8 -*-
# Generated by Django 1.11.9 on 2022-07-19 02:53
from __future__ import unicode_literals
from djongo import models as models_djongo
from django.db import models

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import re



class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=20, verbose_name='Categoría')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(max_length=50, verbose_name='Nombre')),
                ('last_name', models.CharField(max_length=50, verbose_name='Apellido')),
                ('email', models.EmailField(error_messages={'unique': 'Ya existe un usuario con ese email.'}, max_length=50, unique=True, verbose_name='Email')),
                ('identity', models.CharField(error_messages={'unique': 'Ya existe un usuario con ese DNI.'}, max_length=8, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[0-9]*$', 32), 'Ingrese un documento válido (números únicamente).')], verbose_name='DNI')),
                ('phone', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(re.compile('^[0-9-]*$', 32), 'Ingrese un teléfono válido (números y guiones únicamente).')], verbose_name='Número de teléfono')),
                ('expiration_date', models.DateField(default=django.utils.timezone.now, help_text='Una vez llegado el día, se da de baja el usuario.', verbose_name='Fecha de finalización')),
                ('code', models.CharField(default='', max_length=10, validators=[django.core.validators.RegexValidator(re.compile('^[0-9A-Fa-f]*$', 32), 'Código de tarjeta inválido (números hexadecimales únicamente).')], verbose_name='Código')),
                ('is_staff', models.BooleanField(default=False, help_text='Determina si el usuario tiene permisos para administrar el sitio (no posee franjas horarias).', verbose_name='Administrador')),
                ('is_active', models.BooleanField(default=True, help_text='Determina si el usuario puede utilizar el sistema o no.', verbose_name='Activo')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha y hora de registro')),
                ('category_list', models.ManyToManyField('users.Category', blank=True, verbose_name='Categorías'))

            ],
            options={
                'ordering': ['-date_joined'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='TimeZone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zone_name', models.CharField(max_length=20, verbose_name='Turno')),
                ('begin', models.TimeField(verbose_name='Hora de inicio')),
                ('end', models.TimeField(verbose_name='Hora de finalización')),
            ],
        ),
        # migrations.CreateModel(
        #     name='Category',
        #     fields=[
        #         ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
        #         ('category_name', models.CharField(max_length=20, verbose_name='Categoría')),
        #     ],
        # ),
        migrations.CreateModel(
            name='Visitor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(max_length=40)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='visitor', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        # migrations.CreateModel(
        #     name='Device',
        #     fields=[
        #         ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
        #         ('device_name', models.CharField(max_length=50, verbose_name='Nombre de Dispositivo')),
        #         ('ip_address', models.CharField(max_length=50, verbose_name='Dirección IP')),
        #         ('MAC_address', models.CharField(max_length=50, verbose_name='Dirección MAC')),
        #         ('type', models.CharField(max_length=10, verbose_name='Tipo de dispositivo')),
        #         ('category_list', models.ManyToManyField('users.Category',max_length=10, blank=True,verbose_name='Categorías'))
        #     ],
        # ),
        # migrations.AddField(
        #     model_name='user',
        #     name='category_list',
        #     field=models.ManyToManyField(default=1, related_name='category_list', to='users.Category', verbose_name='category_list'),
        # ),
        migrations.AddField(
            model_name='user',
            name='friday',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='friday', to='users.TimeZone', verbose_name='Viernes'),
        ),
        migrations.AddField(
            model_name='user',
            name='monday',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='monday', to='users.TimeZone', verbose_name='Lunes'),
        ),
        migrations.AddField(
            model_name='user',
            name='saturday',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='saturday', to='users.TimeZone', verbose_name='Sábado'),
        ),
        migrations.AddField(
            model_name='user',
            name='sunday',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='sunday', to='users.TimeZone', verbose_name='Domingo'),
        ),
        migrations.AddField(
            model_name='user',
            name='thursday',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='thursday', to='users.TimeZone', verbose_name='Jueves'),
        ),
        migrations.AddField(
            model_name='user',
            name='tuesday',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='tuedsay', to='users.TimeZone', verbose_name='Martes'),
        ),
        migrations.AddField(
            model_name='user',
            name='wednesday',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='wendesday', to='users.TimeZone', verbose_name='Miércoles'),
        ),
    ]
